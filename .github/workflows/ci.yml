name: continuous-integration

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:

jobs:

  pre-commit:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - uses: pre-commit/action@v2.0.0

  tests:

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7, 3.8, 3.9]
        include:
        - os: windows-latest
          python-version: 3.8

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[testing]
    - name: Run pytest
      run: |
        pytest --cov=sphinx_design --cov-report=xml --cov-report=term-missing
    - name: Upload to Codecov
      if: matrix.python-version == 3.8 && matrix.os == ubuntu-latest
      uses: codecov/codecov-action@v1
      with:
        name: pytests
        flags: pytests
        file: ./coverage.xml
        fail_ci_if_error: true

  publish:

    name: Publish to PyPi
    needs: [pre-commit, tests]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Build package
      run: |
        pip install wheel
        python setup.py sdist bdist_wheel
    - name: Publish
      uses: pypa/gh-action-pypi-publish@v1.1.0
      with:
        user: __token__
        password: ${{ secrets.PYPI_KEY }}
